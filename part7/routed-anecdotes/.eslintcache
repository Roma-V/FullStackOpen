[{"/Users/romanvasilyev/FullStackOpen/part7/routed-anecdotes/src/index.js":"1","/Users/romanvasilyev/FullStackOpen/part7/routed-anecdotes/src/App.js":"2"},{"size":242,"mtime":1607847978402,"results":"3","hashOfConfig":"4"},{"size":5395,"mtime":1607862420356,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1mugsrq",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/Users/romanvasilyev/FullStackOpen/part7/routed-anecdotes/src/index.js",[],["12","13"],"/Users/romanvasilyev/FullStackOpen/part7/routed-anecdotes/src/App.js",["14"],"/**\n * @file Main React component for Anecdotes App.\n * @author Roman Vasilyev\n */\nimport React, { useState } from 'react'\nimport {\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useHistory \n} from \"react-router-dom\"\n\n/*\n * Menu component\n */\nconst Menu = () => {\n  const padding = {\n    paddingRight: 5\n  }\n  return (\n    <div>\n      <Link style={padding} to=\"/\">anecdotes</Link>\n      <Link style={padding} to=\"/create\">create new</Link>\n      <Link style={padding} to=\"/about\">about</Link>\n    </div>\n  )\n}\n\n/*\n * Notification component\n */\nconst Notification = ({ message }) => {\n  const notificationStyle = {\n    paddingRight: 5,\n    border: \"solid 1px\",\n    borderColor: \"green\",\n    borderRadius: \"5px\",\n    backgroundColor: \"#EEFFEE\"\n  }\n\n  if (message)\n    return (\n      <div style={notificationStyle}>\n        {message}\n      </div>\n    )\n  else return null\n}\n\n/*\n * AnecdoteList component\n */\nconst AnecdoteList = ({ anecdotes }) => (\n  <div>\n    <h2>Anecdotes</h2>\n    <ul>\n      {anecdotes.map(anecdote => {\n        return (\n          <li key={anecdote.id} >\n            <Link to={`/anecdotes/${anecdote.id}`}>\n              {anecdote.content}\n            </Link>\n          </li>\n        )\n      })}\n    </ul>\n  </div>\n)\n\n/*\n * AnecdoteList component\n */\nconst Anecdote = ({ anecdote }) => (\n  <div>\n    <h2>{anecdote.content}</h2>\n    <p>has {anecdote.votes} votes</p>\n    <p>\n      for more info see  <a href={anecdote.info}>{anecdote.info}</a>\n    </p>\n  </div>\n)\n\n/*\n * About component\n */\nconst About = () => (\n  <div>\n    <h2>About anecdote app</h2>\n    <p>According to Wikipedia:</p>\n\n    <em>An anecdote is a brief, revealing account of an individual person or an incident.\n      Occasionally humorous, anecdotes differ from jokes because their primary purpose is not simply to provoke laughter but to reveal a truth more general than the brief tale itself,\n      such as to characterize a person by delineating a specific quirk or trait, to communicate an abstract idea about a person, place, or thing through the concrete details of a short narrative.\n      An anecdote is \"a story with a point.\"</em>\n\n    <p>Software engineering is full of excellent anecdotes, at this app you can find the best and add more.</p>\n  </div>\n)\n\n/*\n * Footer component\n */\nconst Footer = () => (\n  <div>\n    Anecdote app for <a href='https://courses.helsinki.fi/fi/tkt21009'>Full Stack -websovelluskehitys</a>.\n\n    See <a href='https://github.com/fullstack-hy2020/routed-anecdotes/blob/master/src/App.js'>https://github.com/fullstack-hy2019/routed-anecdotes/blob/master/src/App.js</a> for the source code.\n  </div>\n)\n\n/*\n * CreateNew component\n */\nconst CreateNew = (props) => {\n  const [content, setContent] = useState('')\n  const [author, setAuthor] = useState('')\n  const [info, setInfo] = useState('')\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.addNew({\n      content,\n      author,\n      info,\n      votes: 0\n    })\n  }\n\n  return (\n    <div>\n      <h2>create a new anecdote</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          content\n          <input name='content' value={content} onChange={(e) => setContent(e.target.value)} />\n        </div>\n        <div>\n          author\n          <input name='author' value={author} onChange={(e) => setAuthor(e.target.value)} />\n        </div>\n        <div>\n          url for more info\n          <input name='info' value={info} onChange={(e)=> setInfo(e.target.value)} />\n        </div>\n        <button>create</button>\n      </form>\n    </div>\n  )\n\n}\n\n/*\n * App component\n */\nconst App = () => {\n  const [anecdotes, setAnecdotes] = useState([\n    {\n      content: 'If it hurts, do it more often',\n      author: 'Jez Humble',\n      info: 'https://martinfowler.com/bliki/FrequencyReducesDifficulty.html',\n      votes: 0,\n      id: '1'\n    },\n    {\n      content: 'Premature optimization is the root of all evil',\n      author: 'Donald Knuth',\n      info: 'http://wiki.c2.com/?PrematureOptimization',\n      votes: 0,\n      id: '2'\n    }\n  ])\n\n  const [notification, setNotification] = useState('')\n\n  const history = useHistory()\n\n  const routeMatch = useRouteMatch('/anecdotes/:id')\n  const anecdote = routeMatch\n    ? anecdotes.find(element => element.id === routeMatch.params.id)\n    : null\n\n  const addNew = (anecdote) => {\n    anecdote.id = (Math.random() * 10000).toFixed(0)\n    setAnecdotes(anecdotes.concat(anecdote))\n    setNotification(`A new anecdote created: \"${anecdote.content}\"`)\n    setTimeout(() => {\n      setNotification('')\n    }, 10*1000)\n    history.push('/')\n  }\n\n  const anecdoteById = (id) =>\n    anecdotes.find(a => a.id === id)\n\n  const vote = (id) => {\n    const anecdote = anecdoteById(id)\n\n    const voted = {\n      ...anecdote,\n      votes: anecdote.votes + 1\n    }\n\n    setAnecdotes(anecdotes.map(a => a.id === id ? voted : a))\n  }\n\n  return (\n    <div>\n      <h1>Software anecdotes</h1>\n      <Menu />\n      <Notification message={notification} />\n      <Switch>\n        <Route path=\"/anecdotes/:id\">\n          <Anecdote anecdote={anecdote}/>\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/create\">\n          <CreateNew addNew={addNew} />\n        </Route>\n        <Route path=\"/\">\n          <AnecdoteList anecdotes={anecdotes} />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":197,"column":9,"nodeType":"21","messageId":"22","endLine":197,"endColumn":13},"no-native-reassign",["23"],"no-negated-in-lhs",["24"],"no-unused-vars","'vote' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]
{"version":3,"sources":["services/contacts.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newContact","post","id","delete","contact","put","Filter","name","callback","value","onChange","PersonForm","number","nameCallback","numberCallback","submitCallback","onSubmit","type","Persons","persons","filter","deleteCallback","map","person","toLowerCase","includes","Person","className","onClick","Notification","message","App","useState","setPersons","loadData","contactService","contacts","console","log","useEffect","newName","setNewName","newNumber","setNewNumber","clearInputs","filterName","setFilterName","setMessage","messageType","setMessageType","notify","duration","setTimeout","event","target","preventDefault","existingPerson","find","window","confirm","updatePerson","updatedContact","catch","error","concat","statusText","status","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e6b6bc1.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n  \nconst createContact = newContact => {\n    const request = axios.post(baseUrl, newContact)\n    return request.then(response => response.data)\n}\n\nconst deleteContact = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response)\n}\n\nconst changeContact = contact => {\n    const request = axios.put(`${baseUrl}/${contact.id}`, contact)\n    return request.then(response => response.data)\n}\n  \nexport default { getAll, createContact, deleteContact, changeContact }","import React, { useEffect, useState } from 'react'\nimport contactService from './services/contacts'\n\n// Main App component\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  // Handle communication with server\n  const loadData = () => {\n    contactService.getAll()\n      .then(contacts => {\n      console.log('Data recieved', contacts)\n      setPersons(contacts)\n    })\n  }\n  useEffect(loadData, [])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const clearInputs = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n  const [ filterName, setFilterName ] = useState('')\n  const [ message, setMessage ]  = useState(null)\n  const [ messageType, setMessageType ]  = useState('notification')\n\n  const addContact = (event) => {\n    event.preventDefault()\n    if (!newName) return\n\n    const existingPerson = persons.find(person => person.name === newName)\n    if (existingPerson) {\n      const result = window.confirm(`${newName} is already in phonebook. Replace the old number with a new one?`)\n      if (result) {\n        const updatePerson = {...existingPerson, number: newNumber}\n        contactService.changeContact(updatePerson)\n          .then(updatedContact => {\n            console.log('updated contact', updatedContact)\n            notify(`Changed number for ${updatedContact.name}`, 'notification')\n            \n            setPersons(persons.map(contact => contact.id !== updatedContact.id ? contact : updatedContact))\n            clearInputs()\n          })\n          .catch(error => {\n            console.log(error.response.data)\n            notify(error.response.data.error, 'error')\n          })\n      }\n      return\n    }\n\n    console.log('add contact:', newName)\n    const newContact = {name: newName, number: newNumber}\n    contactService.createContact(newContact)\n      .then(contact => {\n        notify(`Added ${contact.name}`, 'notification')\n        setPersons(persons.concat(contact))\n        clearInputs()\n      })\n      .catch(error => {\n        console.log(error.response.data)\n        notify(error.response.data.error, 'error')\n      })\n  }\n\n  const deleteContact = (id) => {\n    return event => {\n        event.preventDefault()\n\n        const name = persons.find(person => person.id === id).name\n        const result = window.confirm(`This will delete ${name}. Are you sure?`)\n        if (!result)\n          return\n\n        console.log('delete contact:', id)\n        contactService.deleteContact(id)\n          .then(response => {\n            console.log(response.statusText);\n            if (response.status === 200 || response.status === 204) {\n              setPersons(persons.filter(contact => contact.id !== id))\n            }\n          })\n          .catch(error => {\n            console.log(error);\n            notify(`Cannot delete ${name}`, 'error')\n            loadData()\n          })\n    }\n  }\n\n  // Notifications\n  const notify = (message, type, duration = 3000) => {\n    setMessageType(type)\n    setMessage(message)\n    setTimeout(() => {\n      setMessage(null)\n    }, duration)\n  }\n\n  // Handle UI events\n  const handleFilterName = (event) => {\n    setFilterName(event.target.value)\n  }\n\n  const handleNewName = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n      setNewNumber(event.target.value)\n  }\n\n  // Render\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType} />\n      <Filter name={filterName} callback={handleFilterName} />\n      <h3> Add new</h3>\n      <PersonForm name={newName}\n        number={newNumber} \n        nameCallback={handleNewName} \n        numberCallback={handleNewNumber} \n        submitCallback={addContact}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={filterName} deleteCallback={deleteContact} />\n    </div>\n  )\n}\n\n// Helper components used upon App rendering\nconst Filter = ({ name, callback }) => (\n    <div>\n        Filter by name:<input value={name} onChange={callback} />\n    </div>\n)\nconst PersonForm = ({ name, number, nameCallback, numberCallback, submitCallback }) => (\n    <form onSubmit={submitCallback}>\n        <div>\n            name: <input value={name} onChange={nameCallback} />\n        </div>\n        <div>\n            number: <input value={number} onChange={numberCallback} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\nconst Persons = ({ persons, filter, deleteCallback }) => (\n    <div>\n        {persons.map((person) => (filter !== '' && !person.name.toLowerCase().includes(filter.toLowerCase()))\n            ? ''\n            : <Person key={person.id} person={person} deleteCallback={deleteCallback} />)}\n    </div>\n)\nconst Person = ({ person, deleteCallback }) => (\n    <li className='person'>\n      {person.name} {person.number}\n      <button onClick={deleteCallback(person.id)}>delete</button>\n    </li>\n)\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}